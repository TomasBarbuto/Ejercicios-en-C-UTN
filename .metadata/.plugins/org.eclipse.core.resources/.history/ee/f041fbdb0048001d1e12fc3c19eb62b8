#include <stdio.h>
#include <stdlib.h>
#include "Transporte.h"
#include "HojaDeRuta.h"
#include "Validaciones.h"

int idHojaDeRuta() {

	static int idHojaDeRuta = 20000;
	idHojaDeRuta++;

	return idHojaDeRuta;
}


int inicializarHojaDeRuta(hojaDeRuta hojaRuta[], int len) {

	int retorno = 0;

	if (hojaRuta != NULL && len > 0) {

		for (int i = 0; i < len; i++) {

			hojaRuta[i].isEmpty = 0; //0 vacio 1 lleno.
		}

		retorno = 1;
	}

	return retorno;
}


int buscarVacioHojaRuta(hojaDeRuta HojaRuta[], int len) {

	int retorno = -1;

	if (HojaRuta != NULL && len > 0) {

		for (int i = 0; i < len; i++) {

			if (HojaRuta[i].isEmpty == 0) {

				retorno = i; //ya encontre vacio, break.
				break;
			}

		}

	}

	return retorno;
}

int darAltaHojaDeRuta(hojaDeRuta HojaRuta[], transporte transportes[], int len){

	int retorno = 0;
	int confirm;
	hojaDeRuta auxHojaRuta;

	if(HojaRuta != NULL && transportes != NULL && len > 0){

		mostrarDatos(transportes, len);
		system("pause");

		auxHojaRuta.idHoja = idHojaDeRuta()-1;

		getNumber(&auxHojaRuta.transporteId, "\nSeleccione un transporte por su ID: ", "Ese transporte no existe\n",
			transportes[0].idTransporte, transportes[len-1].idTransporte);

		auxHojaRuta.transporteId = transportes[len].idTransporte;

		getNumber(&auxHojaRuta.fecha.dia, "\nIngrese dia: ",
								"Fecha no valida", 1, 31);

		getNumber(&auxHojaRuta.fecha.mes, "\nIngrese mes: ",
								"Fecha no valida", 1, 12);

		getNumber(&auxHojaRuta.fecha.dia, "\nIngrese anio: ",
								"Fecha no valida", 1, 22);



			int idHoja; //(comienza en 20000)
			int transporteId; //(debe existir) Validar
			float precioViaje;
			float kmsTotales;
			fechas fecha;
			int isEmpty;













			getNumber(&confirm, "\nIngrese 1 si su seleccion es correcta o 0 si desea volver a elegir\nOpcion: ",
								"\nOpcion no valida",0 , 1);










	}

	return retorno;
}

