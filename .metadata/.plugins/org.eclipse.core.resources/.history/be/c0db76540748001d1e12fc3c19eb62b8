#include <stdio.h>
#include <stdlib.h>
#include "Transporte.h"
#include "HojaDeRuta.h"
#include "Validaciones.h"

int idHojaDeRuta() {

	static int idHojaDeRuta = 20000;
	idHojaDeRuta++;

	return idHojaDeRuta;
}

int inicializarHojaDeRuta(hojaDeRuta hojaRuta[], int len) {

	int retorno = 0;

	if (hojaRuta != NULL && len > 0) {

		for (int i = 0; i < len; i++) {

			hojaRuta[i].isEmpty = 0; //0 vacio 1 lleno.
		}

		retorno = 1;
	}

	return retorno;
}

int buscarVacioHojaRuta(hojaDeRuta HojaRuta[], int len) {

	int retorno = -1;

	if (HojaRuta != NULL && len > 0) {

		for (int i = 0; i < len; i++) {

			if (HojaRuta[i].isEmpty == 0) {

				retorno = i; //ya encontre vacio, break.
				break;
			}

		}

	}

	return retorno;
}

int darAltaHojaDeRuta(hojaDeRuta HojaRuta[], transporte transportes[], int len) {

	int retorno = 0;
	int confirm;
	int indice;
	int idtransporte;
	hojaDeRuta auxHojaRuta;

	if (HojaRuta != NULL && transportes != NULL && len > 0) {

		do{
			indice = buscarVacioHojaRuta(HojaRuta, len);

			if(indice != -1){

				mostrarDatos(transportes, len);
				system("pause");

				idtransporte = getNumber(&auxHojaRuta.transporteId,
						"\nSeleccione un transporte por su ID: ",
						"Ese transporte no existe\n", transportes[0].idTransporte,
						transportes[4].idTransporte);

					if(buscarIdTransporte(&auxHojaRuta, len, &idtransporte)){

						auxHojaRuta.transporteId = transportes[len].idTransporte;

						auxHojaRuta.idHoja = idHojaDeRuta() - 1;

						getNumber(&auxHojaRuta.fecha.dia, "\nIngrese dia: ", "Fecha no valida",
								1, 31);

						getNumber(&auxHojaRuta.fecha.mes, "\nIngrese mes: ", "Fecha no valida",
								1, 12);

						getNumber(&auxHojaRuta.fecha.dia, "\nIngrese anio: ", "Fecha no valida",
								1, 22);

						getFloat(&auxHojaRuta.kmsTotales, "\nIngrese cantidad de kilometros: ",
								"kilometros no validos\n", 50, 4000);

						getFloat(&auxHojaRuta.precioViaje, "\nIngrese el precio del viaje: ",
								"Precio No valido\n", 1000, 999999);

						auxHojaRuta.isEmpty = 1;
					}

			}

			mostrarHojaDeRuta(&auxHojaRuta, 0);

			getNumber(&confirm,
					"\nIngrese 1 si su seleccion es correcta o 0 si desea volver a elegir\nOpcion: ",
					"\nOpcion no valida", 0, 1);

		}while(confirm != 1);

		HojaRuta[indice] = auxHojaRuta;
		retorno = 1;
	}

	return retorno;
}

void mostrarHojaDeRuta(hojaDeRuta HojaRuta[], int len){

	for (int i = 0; i < len; i++) {

		if (HojaRuta[i].isEmpty == 1) {

			printf("\nid Hoja de ruta: %d\n", HojaRuta[i].idHoja);
			printf("id transporte: %d\n", HojaRuta[i].transporteId);
			printf("Kilometros: %.2f\n", HojaRuta[i].kmsTotales);
			printf("Precio de viaje: %.2f\n", HojaRuta[i].precioViaje);
			printf("fecha: %d/%d/%d\n", HojaRuta[i].fecha.dia, HojaRuta[i].fecha.mes, HojaRuta[i].fecha.anio);

		}
	}

}
