#include <stdio.h>
#include "HojaDeRuta.h"

int idHojaDeRuta() {

	static int idHojaDeRuta = 20000;
	idHojaDeRuta++;

	return idHojaDeRuta;
}

int inicializarHojaDeRuta(hojaDeRuta hojaRuta[], int len) {

	int retorno = 0;

	if (hojaRuta != NULL && len > 0) {

		for (int i = 0; i < len; i++) {

			hojaRuta[i].isEmpty = 0; //0 vacio 1 lleno.
		}

		retorno = 1;
	}

	return retorno;
}

int darHojasDeRuta(hojaDeRuta hojaRuta[], int len) {

	int retorno = -1;
	int indice;
	int confirm;
	hojaDeRuta auxHojaRuta;

	if (hojaRuta != NULL && len > 0) {
		do{
			indice = buscarVacio(hojaRuta, len);

			if (indice != -1) {

				auxtransporte.idTransporte = idTransportes()-1;

				getString(auxtransporte.descripcion, "\nIngrese descripcion: ",
						"Se paso de texto", 1024);

				getNumber(&auxtransporte.pesoCarga, "\nIngrese el pesoCarga: ",
						"Imposible llevar esos KG", 50, 100000);

				getNumber(&auxtransporte.cantidadBultos,
						"\nIngrese cantidadBultos:",
						"Imposible llevar esa cantidad de bultos", 1, 1000);

				getNumber(&auxtransporte.tipoId, "\nIngrese tipoId:\n"
						"1000: 'CAMION RECTO'\n"
						"1001: 'CAMION REMOLQUE'\n"
						"1002: 'CAMION SEMIRREMOLQUE'\n"
						"1003: 'CAMION ELEVADOR'", "ID No valido", 1000, 1003);

				auxtransporte.isEmpty = 1;

			}


			mostrarDatos(&auxtransporte, len);
			getNumber(&confirm, "\nIngrese 1 si los datos ingresados son correctos o 0 si desea volver a cargar\nOpcion: ",
					"\nNo ingreso algo valido",0 , 1);

		}while(confirm != 1);

		//confirmar antes de dar alta
		transportes[indice] = auxtransporte;

	}

	return retorno;
}


